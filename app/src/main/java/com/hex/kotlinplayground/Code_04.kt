package com.hex.kotlinplayground

/*
 * Reto #4
 * 츼REA DE UN POL칈GONO
 * Fecha publicaci칩n enunciado: 24/01/22
 * Fecha publicaci칩n resoluci칩n: 31/01/22
 * Dificultad: F츼CIL
 *
 * Enunciado: Crea UNA 칔NICA FUNCI칍N (importante que s칩lo sea una) que sea capaz de calcular y retornar el 치rea de un pol칤gono.
 * - La funci칩n recibir치 por par치metro s칩lo UN pol칤gono a la vez.
 * - Los pol칤gonos soportados ser치n Tri치ngulo, Cuadrado y Rect치ngulo.
 * - Imprime el c치lculo del 치rea de un pol칤gono de cada tipo.
 *
 * Informaci칩n adicional:
 * - Usa el canal de nuestro discord (https://mouredev.com/discord) "游대reto-semanal" para preguntas, dudas o prestar ayuda a la acomunidad.
 * - Puedes hacer un Fork del repo y una Pull Request al repo original para que veamos tu soluci칩n aportada.
 * - Revisar칠 el ejercicio en directo desde Twitch el lunes siguiente al de su publicaci칩n.
 * - Subir칠 una posible soluci칩n al ejercicio el lunes siguiente al de su publicaci칩n.
 *
 */

fun main(){
    CalcularArea(Triangulo(10.0,5.0))
    CalcularArea(Cuadrado(4.0))
    CalcularArea(Rectangulo(5.0,7.0))
}

interface IPoligono {
    fun area(): Double
    fun printArea()
}

data class Triangulo(val base: Double, val altura: Double): IPoligono{

    override fun area(): Double {
        return ( base * altura ) / 2
    }

    override fun printArea() {
        println("Area del triangulo: ${area()}")
    }
}

data class Cuadrado(val lado: Double): IPoligono{

    override fun area(): Double {
        return lado * lado    }

    override fun printArea() {
        println("Area del cuadrado: ${area()}")
    }
}

data class Rectangulo(val largo: Double, val ancho: Double): IPoligono{

    override fun area(): Double {
        return largo * ancho
    }

    override fun printArea() {
        println("Area del cuadrado: ${area()}")
    }
}

fun CalcularArea(poligono: IPoligono): Double{
    poligono.printArea()
    return poligono.area()
}





